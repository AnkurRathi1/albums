"""empty message

Revision ID: 3ac621833a48
Revises: c46ad24d146d
Create Date: 2022-06-19 19:51:34.693304

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '3ac621833a48'
down_revision = 'c46ad24d146d'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('items',
    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=True),
    sa.Column('created_on', sa.TIMESTAMP(timezone=True), server_default=sa.text('current_timestamp'), nullable=True),
    sa.Column('updated_on', sa.TIMESTAMP(timezone=True), server_default=sa.text('current_timestamp'), nullable=True),
    sa.Column('name', sa.String(length=256), nullable=True),
    sa.Column('href', sa.String(length=25), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_items_created_on'), 'items', ['created_on'], unique=False)
    op.create_index(op.f('ix_items_id'), 'items', ['id'], unique=False)
    op.create_table('tracks',
    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=True),
    sa.Column('created_on', sa.TIMESTAMP(timezone=True), server_default=sa.text('current_timestamp'), nullable=True),
    sa.Column('updated_on', sa.TIMESTAMP(timezone=True), server_default=sa.text('current_timestamp'), nullable=True),
    sa.Column('limit', sa.Integer(), nullable=False),
    sa.Column('offset', sa.Integer(), nullable=False),
    sa.Column('total', sa.Integer(), nullable=False),
    sa.Column('previous', sa.String(length=256), nullable=True),
    sa.Column('href', sa.String(length=256), nullable=True),
    sa.Column('next', sa.String(length=256), nullable=True),
    sa.Column('width', sa.String(length=25), nullable=True),
    sa.Column('height', sa.String(length=25), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tracks_created_on'), 'tracks', ['created_on'], unique=False)
    op.create_index(op.f('ix_tracks_id'), 'tracks', ['id'], unique=False)
    op.create_table('albums',
    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=True),
    sa.Column('created_on', sa.TIMESTAMP(timezone=True), server_default=sa.text('current_timestamp'), nullable=True),
    sa.Column('updated_on', sa.TIMESTAMP(timezone=True), server_default=sa.text('current_timestamp'), nullable=True),
    sa.Column('album_type', sa.String(length=25), nullable=True),
    sa.Column('name', sa.String(length=256), nullable=True),
    sa.Column('release_date', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('url', sa.String(length=256), nullable=True),
    sa.Column('type', sa.String(length=256), nullable=True),
    sa.Column('href', sa.String(length=256), nullable=True),
    sa.Column('available_markets', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('img_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('artist_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('track_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['artist_id'], ['artists.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['img_id'], ['images.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['track_id'], ['tracks.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_albums_created_on'), 'albums', ['created_on'], unique=False)
    op.create_index(op.f('ix_albums_id'), 'albums', ['id'], unique=False)
    # op.alter_column('artists', 'id',
    #            existing_type=postgresql.UUID(),
    #            nullable=True,
    #            existing_server_default=sa.text('uuid_generate_v4()'))
    # op.alter_column('images', 'id',
    #            existing_type=postgresql.UUID(),
    #            nullable=True,
    #            existing_server_default=sa.text('uuid_generate_v4()'))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('images', 'id',
               existing_type=postgresql.UUID(),
               nullable=False,
               existing_server_default=sa.text('uuid_generate_v4()'))
    op.alter_column('artists', 'id',
               existing_type=postgresql.UUID(),
               nullable=False,
               existing_server_default=sa.text('uuid_generate_v4()'))
    op.drop_index(op.f('ix_albums_id'), table_name='albums')
    op.drop_index(op.f('ix_albums_created_on'), table_name='albums')
    op.drop_table('albums')
    op.drop_index(op.f('ix_tracks_id'), table_name='tracks')
    op.drop_index(op.f('ix_tracks_created_on'), table_name='tracks')
    op.drop_table('tracks')
    op.drop_index(op.f('ix_items_id'), table_name='items')
    op.drop_index(op.f('ix_items_created_on'), table_name='items')
    op.drop_table('items')
    # ### end Alembic commands ###
